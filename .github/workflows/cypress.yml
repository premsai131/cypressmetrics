name: Run Cypress Tests and List Artifacts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Enables manual triggering of the workflow
    inputs:
      environment_name:
        description: 'Select Environment'
        type: choice
        options:
          - blitzv2
          - stagev2
          - sandboxv2
          - production
        default: blitzv2
        required: true

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set-default.outputs.env_name }}
    steps:
      - name: Set default environment name
        id: set-default
        run: |
          current_hour=$(date +"%H")
          echo "Current Hour: $current_hour"
          
          if [[ "$current_hour" == "21" ]]; then
            echo "env_name=blitzv2" >> $GITHUB_OUTPUT
          elif [[ "$current_hour" == "23" ]]; then
            echo "env_name=stagev2" >> $GITHUB_OUTPUT
          else
            environment_name=${{ github.event.inputs.environment_name }}
            if [[ -z "$environment_name" ]]; then
              echo "env_name=default-env" >> $GITHUB_OUTPUT
            else
              echo "env_name=$environment_name" >> $GITHUB_OUTPUT
            fi
          fi
          
          # Debugging: Output the file content
          echo "GITHUB_OUTPUT content:"
          cat $GITHUB_OUTPUT

  # Job to run Cypress tests and upload artifacts
  cypress-run:
    outputs:
      cypress_project_id: ${{ steps.set-cypresscloud-project-id.outputs.project_id }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    env:
      CYPRESS_PROJECT_ID: 'qdjmfg'
      CYPRESS_RECORD_KEY: '349e203f-44fe-4e1c-91b4-1869bd99af81'
      MATRIX_CONTAINER: ${{ matrix.containers }}
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Store env as file & set Cypress project ID Output
        id: set-cypresscloud-project-id
        run: |
          echo "project_id= qdjmfg" >> $GITHUB_OUTPUT
      # Step 2: Run Cypress tests
      - name: Cypress Run for Matrix Container
        uses: cypress-io/github-action@v6
        with:
          record: 'true'
          parallel: 'true'
          browser: 'chrome'

      # Step 3: Verify Report Files
      - name: Verify Report Files
        if: ${{ always() }}
        run: |
          echo "Checking reports directory for containers ${{ matrix.containers }}..."
          ls -l cypress/reports/mocha/Regression/${{ matrix.containers }}/.jsons || echo "Directory or files not found."

      # Step 4: Create Zip Archive of Mocha Reports
      - name: Zip Mocha Report Files
        if: ${{ always() }}
        run: |
          mkdir -p zipped-reports
          if [ -d "cypress/reports/mocha/Regression/${{ matrix.containers }}/.jsons" ]; then
            zip -r zipped-reports/mocha-reports-${{ matrix.containers }}.zip cypress/reports/mocha/Regression/${{ matrix.containers }}/.jsons/*
          else
            echo "No files to zip for containers ${{ matrix.containers }}."
          fi

      # Step 5: Upload Artifacts
      - name: Upload Artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.containers }}
          retention-days: 1
          path: zipped-reports/mocha-reports-${{ matrix.containers }}.zip

  # Job to download and list artifacts
  download-artifacts:
    if: ${{ always() }}
    needs: cypress-run
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out repository to access the JavaScript script
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Create a directory to download artifacts
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: downloaded-artifacts

      - name: Unzip Artifacts
        run: |
          for dir in downloaded-artifacts/*; do
            if [ -d "$dir" ]; then
              echo "Unzipping $dir..."
              unzip -o "$dir/*.zip" -d "$dir/unzipped"
            fi
          done

      # Step 3: Set up Node.js environment
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Specify a compatible Node.js version

      # Step 4: Debug the downloaded directory
      - name: Debug directory contents
        run: ls -la /home/runner/work/cypressmetrics/cypressmetrics/downloaded-artifacts

      # Step 5: List the contents of downloaded artifacts
      - name: Debug Full Directory Structure
        run: |
          for dir in downloaded-artifacts/*; do
            if [ -d "$dir/unzipped/cypress/reports/mocha/Regression" ]; then
              echo "Checking contents of $dir/unzipped/cypress/reports/mocha/Regression:"
              for subdir in "$dir/unzipped/cypress/reports/mocha/Regression/"*; do
                if [ -d "$subdir" ]; then
                  echo "Contents of $subdir:"
                  ls -R "$subdir"
                  # Check for .jsons folder
                  if [ -d "$subdir/.jsons" ]; then
                    echo "Contents of $subdir/.jsons:"
                    ls -la "$subdir/.jsons"
                  else
                    echo "No .jsons folder found in $subdir."
                  fi
                else
                  echo "$subdir is not a directory."
                fi
              done
            else
              echo "No Regression directory found in $dir/unzipped/cypress/reports/mocha."
            fi
          done
          
      - name: check envs 
        run: |
          ENV_NAME= ${{ needs.determine-environment.outputs.env_name }}
          CYPRESS_PROJECT_ID= ${{ needs.cypress-run.outputs.cypress_project_id }} 
          GITHUB_RUN_ID="${{ github.run_id }}"

          echo "Environment Name: $ENV_NAME"
          echo "Test Type: $TEST_TYPE"
          echo "Cypress Project ID: $CYPRESS_PROJECT_ID"
          echo "GitHub Run ID: $GITHUB_RUN_ID"

