name: Run Cypress Tests and List Artifacts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Enables manual triggering of the workflow
    inputs:
      environment_name:
        description: 'Select Environment'
        type: choice
        options:
          - blitzv2
          - stagev2
          - sandboxv2
          - production
        default: blitzv2
        required: true
      test_type:
        description: 'Select Test Type'
        type: choice
        options:
          - Smoke
          - Regression
          - Sanity
      cloud_record:
        description: 'Cypress cloud record'
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'true'

jobs:
  calculate-containers-count:
    runs-on: ubuntu-latest
    outputs:
      default_containers: ${{ steps.set-default.outputs.default_containers }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
    
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
    
      - name: Set default containers
        id: set-default
        run: |
          cloud_record=${{ github.event.inputs.cloud_record || 'true' }}
          environment_name="${{ github.event.inputs.environment_name }}"
          if [[ "$cloud_record" == "true" && "$environment_name" == "production" ]]; then
           regions=$(cat sanity-test-config.json)
           echo "Regions: $regions"
           default_containers=$(echo "$regions" | jq -c '[.regions[] | {workspace_id: .workspace_id, vault_id: .vault_id, display_name: .display_name, data_plane_url: .data_plane_url, workspace_url: .workspace_url, run_create_function_tests: .run_create_function_tests, run_generate_bearer_token_tests: .run_generate_bearer_token_tests}]')
           echo "default_containers=$default_containers" >> $GITHUB_OUTPUT
            
          elif [[ "$cloud_record" == "true" || "${{ github.event_name }}" == "schedule" ]]; then
            echo "default_containers=[1, 2, 3, 4, 5]" >> $GITHUB_OUTPUT
    
          else
            echo "default_containers=[1]" >> $GITHUB_OUTPUT
          fi
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set-default.outputs.env_name }}
    steps:
      - name: Set default environment name
        id: set-default
        run: |
          current_hour=$(date +"%H")
          echo "Current Hour: $current_hour"
          
          if [[ "$current_hour" == "21" ]]; then
            echo "env_name=blitzv2" >> $GITHUB_OUTPUT
          elif [[ "$current_hour" == "23" ]]; then
            echo "env_name=stagev2" >> $GITHUB_OUTPUT
          else
            environment_name=${{ github.event.inputs.environment_name }}
            if [[ -z "$environment_name" ]]; then
              echo "env_name=default-env" >> $GITHUB_OUTPUT
            else
              echo "env_name=$environment_name" >> $GITHUB_OUTPUT
            fi
          fi
          
          # Debugging: Output the file content
          echo "GITHUB_OUTPUT content:"
          cat $GITHUB_OUTPUT
  prepare-containers:
    runs-on: ubuntu-latest
    outputs:
      matrix-container: ${{ steps.prepare_containers.outputs.matrix_container }}  # Store the value to outputs
    steps:
      - name: Prepare matrix containers based on environment
        id: prepare_containers
        run: |
          echo "Environment is: ${{ secrets.ENVIRONMENT }}"
          if [ "${{ secrets.ENVIRONMENT }}" == "production" ]; then
            echo "is_production=true" >> $GITHUB_ENV
            echo "Processing containers for production environment"
            containers=$(echo '${{ needs.calculate-containers-count.outputs.default_containers }}' | jq -r 'map(.workspace_id) | join(",")')
            echo "Containers: $containers"
            echo "MATRIX_CONTAINER=$containers" >> $GITHUB_ENV
            echo "::set-output name=matrix_container::$containers"  # Set output here
          else
            echo "is_production=false" >> $GITHUB_ENV
            echo "Processing containers for non-production environment"
            containers_list=${{ needs.calculate-containers-count.outputs.default_containers }}
            echo "MATRIX_CONTAINER=$containers_list" >> $GITHUB_ENV
            echo "::set-output name=matrix_container::$containers_list"  # Set output here
          fi
  output-containers:
    needs: [determine-environment, calculate-containers-count, prepare-containers]
    runs-on: ubuntu-latest
    steps:
      - name: containers
        run: |
          echo "Raw Output: ${{ needs.calculate-containers-count.outputs.default_containers }}"
          echo "Count: $(echo '${{ needs.calculate-containers-count.outputs.default_containers }}' | jq '. | length')"
          
  cypress-run:
    needs: [determine-environment, calculate-containers-count, prepare-containers]
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        containers: ${{ fromJSON(needs.calculate-containers-count.outputs.default_containers) }}
    steps:
      - name: Cypress run for Smoke tests
        run: |
          echo |
            echo "containers: ${{ matrix.containers }}"
            "continaers: ${{ needs.prepare-containers.outputs.matrix-container }}"
            "Vaultid: ${{ matrix.containers.vault_id}}"
        env:
          MATRIX_CONTAINER: ${{
            github.event.inputs.environment_name == 'production' 
            && matrix.containers.vault_id || ${{ matrix.containers }}
           
    
      
